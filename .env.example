DEBUG=True
DATABASE_URL=postgres://postgres:postgres@paul-db/paul
CORS_ALLOWED_ORIGINS=http://localhost:8080,http://localhost:8081
ALLOWED_HOSTS=localhost,127.0.0.1,api
SECRET_KEY="so-secret-please-don't-tell-anyone"

DJANGO_ADMIN_USERNAME=aaaa
DJANGO_ADMIN_EMAIL=a@a.co
DJANGO_ADMIN_PASSWORD=aaaa

# back-end start-up
RUN_FEED=yes
RUN_MIGRATION=yes
RUN_DEV_SERVER=yes
RUN_COLLECT_STATIC=no
RUN_CREATE_SUPER_USER=yes

NO_REPLY_EMAIL=email@example.com
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=
EMAIL_HOST_USER=
EMAIL_HOST_PASSWORD=
EMAIL_PORT=587
EMAIL_USE_TLS=True

FRONTEND_DOMAIN=localhost:8080

# postgres container provisioning
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=paul

# celery & redis settings
CELERY_BROKER_URL=redis://redis:6379/0

# Choose which profiles to enable for Docker Compose
# For Celery use the "with-task-queue" profile
#COMPOSE_PROFILES=with-task-queue
COMPOSE_PROFILES=

# Mailchimp and Woocommerce plugins require a task queue to be installed
PLUGIN_MAILCHIMP_ENABLED=no
PLUGIN_WOOCOMMERCE_ENABLED=no
