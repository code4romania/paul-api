version: '3.4'

services:

  api:
    container_name: api
    stdin_open: true
    tty: true
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    command: dockerize -wait tcp://paul-db:5432 -timeout 90s -- web
    env_file:
      - .env
    environment:
      - "PYTHONUNBUFFERED=1"
    ports:
      - "8000:8000"
    volumes:
      - ./:/opt
    restart: on-failure
    depends_on:
      - paul-db
      - redis


  paul-db:
    container_name: paul-db
    hostname: paul-db
    build:
      context: .
      dockerfile: docker/postgres/Dockerfile
    # ports:
    #   - "5434:5432"
    env_file:
      - .env
    volumes:
      - database-data:/var/lib/postgresql/data/
    restart: on-failure

  # rabbitmq:
  #   container_name: rabbitmq
  #   hostname: rabbitmq
  #   image: rabbitmq:latest
  #   ports:
  #     - "5672:5672"
  #   restart: on-failure

  redis:
    image: redis:latest
    # ports:
    #  - '6379:6379'
    restart: on-failure


  celery_worker:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    command: dockerize -wait tcp://paul-db:5432 -wait tcp://redis:6379 -timeout 90s -- celery
    depends_on:
      - api
      - paul-db
      - redis
    deploy:
      # replicas: 2
      restart_policy:
        condition: on-failure
      resources:
        limits:
          memory: 200M
    restart: on-failure

  celery_beat:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    command: dockerize -wait tcp://paul-db:5432 -wait tcp://redis:6379 -timeout 90s -- celerybeat
    depends_on:
      - api
      - paul-db
      - redis
    restart: on-failure

  flower:  
    image: mher/flower:0.9.5
    command: ["flower", "--broker=redis://redis:6379/0", "--port=8888"]  
    ports:  
       - 8888:8888  
    depends_on:
      - redis
networks:
  main:
volumes:
  database-data: